{

// testedfiles: Routing.ycp Testsuite.ycp

include "testsuite.ycp";

map READ = $[
    "target" : $[
	"size" : 1,
	"tmpdir" : "/tmp",
    ],
    "routes" : [$["1":"r1"], $["2":"r2"]],
    "probe" : $[ "system" : [] ],
    "product" : $[
        "features" : $[
            "USE_DESKTOP_SCHEDULER" : "0",
            "ENABLE_AUTOLOGIN" : "0",
            "EVMS_CONFIG" : "0",
            "IO_SCHEDULER" : "cfg",
            "UI_MODE" : "expert",
        ],
    ],
    "sysconfig": $[
        "language" : $[
            "RC_LANG" : "",
            "DEFAULT_LANGUAGE" : "",
	    "ROOT_USES_LANG" : "no",
        ],
	"console" : $[
	    "CONSOLE_ENCODING" : "UTF-8",
	],
    ],
    "etc" : $[
	"sysctl_conf" : $[
	    "net.ipv4.ip_forward" : "1"
	]
    ]
];

map EXEC = $[
    "target": $[
	"bash_output": $[],
	"bash" : -1	// simluate not running SuSEFirewall
    ]
];

TESTSUITE_INIT([READ, $[], EXEC], nil);
import "Routing";

DUMP("==== Read =====");
TEST(``(Routing::Read()), [READ, $[], EXEC], nil);
DUMP(sformat("Routing::routes %1",Routing::Routes));

DUMP("==== Write ====");
// Routing::Forward = true;
TEST(``(Routing::Write()), [READ], nil);
Routing::Routes = [ $["1":"r1"], $["3":"r3"] ];
TEST(``(Routing::Write()), [READ], nil);

DUMP("==== Import ====");
TEST(``(Routing::Import($["routes":["r7", "r8"], "ip_forward":true])), [], nil);

DUMP("==== Export ====");
TEST(``(Routing::Export()), [], nil);

}
